name: Automated Tests



on:

  push:

    branches: [ main, develop ]

  pull_request:

    branches: [ main ]

  schedule:

    - cron: '0 2 * * 1-5'  # 工作日凌晨2点运行



jobs:

  test:

    runs-on: ubuntu-latest

    strategy:

      matrix:

        browser: [chrome, firefox]

        python-version: [3.8, 3.9, '3.10']

        test-group: [smoke, regression]



    steps:

    - uses: actions/checkout@v3



    - name: Set up Python ${{ matrix.python-version }}

      uses: actions/setup-python@v4

      with:

        python-version: ${{ matrix.python-version }}



    - name: Install dependencies

      run: |

        python -m pip install --upgrade pip

        pip install -r requirements.txt



    - name: Install browser drivers

      run: |

        if [ "${{ matrix.browser }}" == "chrome" ]; then

          sudo apt-get update

          sudo apt-get install -y google-chrome-stable

        elif [ "${{ matrix.browser }}" == "firefox" ]; then

          sudo apt-get update

          sudo apt-get install -y firefox

        fi



    - name: Run tests

      run: |

        python -m pytest \\

          -m ${{ matrix.test-group }} \\

          --browser=${{ matrix.browser }} \\

          --headless \\

          --html=reports/report_${{ matrix.browser }}_${{ matrix.test-group }}.html \\

          --self-contained-html \\

          --tb=short \\

          -v

      env:

        TEST_ENV: ci



    - name: Upload test reports

      uses: actions/upload-artifact@v3

      if: always()

      with:

        name: test-reports-${{ matrix.browser }}-${{ matrix.test-group }}

        path: reports/



    - name: Upload screenshots

      uses: actions/upload-artifact@v3

      if: failure()

      with:

        name: screenshots-${{ matrix.browser }}-${{ matrix.test-group }}

        path: screenshots/



  parallel-test:

    runs-on: ubuntu-latest

    needs: test



    steps:

    - uses: actions/checkout@v3



    - name: Set up Python

      uses: actions/setup-python@v4

      with:

        python-version: '3.9'



    - name: Install dependencies

      run: |

        python -m pip install --upgrade pip

        pip install -r requirements.txt



    - name: Run parallel tests

      run: |

        python parallel_runner.py



    - name: Upload parallel test reports

      uses: actions/upload-artifact@v3

      if: always()

      with:

        name: parallel-test-reports

        path: reports/
